{"version":3,"sources":["components/grid/grid.module.scss","components/button/button.module.scss","models/index.ts","store/app/constants.ts","store/app/reducer.ts","store/index.ts","components/button/index.tsx","store/app/actions.ts","components/select/expand_more.svg","components/select/index.tsx","components/header/index.tsx","utils/index.ts","components/grid/index.tsx","App.tsx","serviceWorker.ts","index.tsx","components/header/header.module.scss","components/select/select.module.scss"],"names":["module","exports","FieldPossibleValues","StateMachineTransitions","StateMatrixTransitions","Speed","APP_CONSTANTS","Transition","currentPosition","nextByX","nextByO","this","QR","rows","columns","Bunny","Aries","Flower","Dog","Queen","Something","Bacterium","GaryGrant","Cats","NonogramOptions","label","value","imagesMapper","response","1","2","3","4","5","6","7","8","9","10","SpeedOptions","slow","medium","fast","initialState","selectedOption","running","speed","clear","app","state","action","type","payload","option","rootReducer","combineReducers","createStore","Button","props","title","onClick","disabled","className","classes","styles","btn","push","join","AppActions","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","d","_ref3","fill","_ref","svgRef","viewBox","width","height","ref","ForwardRef","forwardRef","Select","options","onChange","prefix","placeholder","useState","opened","setOpened","handleChange","useCallback","toggleOpen","wrapper","select","arrow","list","map","o","item","Header","dispatch","useDispatch","useSelector","handleClick","handleChangeOption","handleChangeSpeed","handleClear","navigation","name","selector","github","href","isArraysEqual","a","b","ii","every","arr","sum","reduce","acc","v","createRowFromColumn","array","colIndex","result","row","applyColumnResult","createField","cols","Field","jj","UNDEFINED","tryResolveRow","definition","stateMachine","createStateMachine","transitions","createStateMachineTransitions","stateMatrix","createStateMatrix","fillStateMatrix","resolveRow","StateMachine","IDLE","TRANSITION","StateMachineTransitioner","current","next","undefined","rowDefinition","StateMatrix","couldBeInPosition","Set","add","column","currentFieldValue","nextStateAvailablePositions","forEach","statePositionIndex","stateMachineValueForPosition","LEFT_O","LEFT_TOP_O","LEFT_X","LEFT_TOP_X","BLACK_SQUARE","WHITE_SQUARE","Error","availableVariants","rowPosition","colPosition","q","currentVariant","rowNumber","colNumber","pop","exit","cellArray","slice","reverse","col","theSameValue","timeout","ms","Promise","resolve","setTimeout","parseArray","text","replace","trim","split","match","parseFloat","filter","Math","sign","parseText","Grid","field","setField","isHorizontal","setHorizontal","scannerPosition","setScannerPosition","maxColumnHeight","setMaxColumnHeight","maxRowsHeight","setMaxRowsHeight","rowsInput","setRowsInput","columnsInput","setColumnsInput","useEffect","f","maxCol","sort","Array","maxRow","hasChanges","includes","splice","colDefinition","alert","solve","scannerStyle","top","left","TableHeader","reversed","concat","abs","numberTable","headerRow","headerIndex","numberCell","RowHeader","rowIndex","rowHeight","rowHeightIndex","updateInput","setter","e","handleParse","r","c","description","inputs","input","actions","table","cell","empty","filled","dotWrapper","dot","scanner","style","App","store","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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AAK,CAAC,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,GAAI,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,KAG7LK,EAAQ,CACZL,QAAS,CAAC,CAAC,GAAI,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,CAAC,EAAG,GAAI,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,CAAC,EAAG,EAAG,IAAK,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,CAAC,EAAG,GAAI,EAAG,EAAG,IAAK,CAAC,EAAG,GAAI,EAAG,EAAG,IAAK,CAAC,EAAG,GAAI,EAAG,EAAG,IAAK,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,IACzrmCO,EAAY,CAChBN,QAAS,CAAC,CAAC,GAAI,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,EAAG,GAAI,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IACv3BD,KAAM,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,CAAC,EAAG,EAAG,EAAG,IAAK,CAAC,EAAG,EAAG,IAAK,CAAC,EAAG,GAAI,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,CAAC,EAAG,EAAG,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,CAAC,GAAI,GAAI,GAAI,CAAC,GAAI,GAAI,MAG1zBQ,EAAY,CAChBP,QAAS,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,CAAC,EAAG,GAAI,EAAG,GAAI,CAAC,EAAG,GAAI,GAAI,CAAC,EAAG,GAAI,EAAG,GAAI,CAAC,EAAG,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,GAAI,CAAC,GAAI,GAAI,GAAI,CAAC,GAAI,IAAK,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,EAAG,EAAG,IAAK,CAAC,GAAI,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,GAAI,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,IAAK,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,IAAK,CAAC,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,GAAI,EAAG,EAAG,GAAI,CAAC,EAAG,GAAI,EAAG,EAAG,GAAI,CAAC,EAAG,GAAI,EAAG,IAAK,CAAC,EAAG,GAAI,GAAI,CAAC,EAAG,GAAI,GAAI,CAAC,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IACzgCD,KAAM,CAAC,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,CAAC,EAAG,GAAI,GAAI,CAAC,EAAG,EAAG,GAAI,EAAG,GAAI,CAAC,EAAG,GAAI,EAAG,GAAI,CAAC,EAAG,IAAK,CAAC,GAAI,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,EAAG,GAAI,CAAC,EAAG,GAAI,EAAG,GAAI,CAAC,EAAG,GAAI,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,CAAC,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,CAAC,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,IAAK,CAAC,EAAG,GAAI,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,EAAG,GAAI,CAAC,EAAG,GAAI,EAAG,GAAI,CAAC,EAAG,GAAI,EAAG,IAAK,CAAC,GAAI,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,EAAG,GAAI,CAAC,EAAG,GAAI,GAAI,CAAC,EAAG,EAAG,GAAI,GAAI,CAAC,EAAG,EAAG,GAAI,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,KAGpgCS,EAAY,CAChBR,QAAS,CAAC,CAAC,IAAK,CAAC,IAAK,CAAC,IAAK,CAAC,GAAI,IAAK,CAAC,EAAG,EAAG,IAAK,CAAC,EAAG,EAAG,IAAK,CAAC,EAAG,EAAG,EAAG,IAAK,CAAC,GAAI,EAAG,EAAG,IAAK,CAAC,GAAI,EAAG,EAAG,IAAK,CAAC,GAAI,GAAI,GAAI,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,EAAG,GAAI,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,GAAI,EAAG,EAAG,GAAI,CAAC,EAAG,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,CAAC,EAAG,EAAG,EAAG,IAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,CAAC,EAAG,EAAG,GAAI,EAAG,IAAK,CAAC,EAAG,EAAG,GAAI,EAAG,IAAK,CAAC,EAAG,EAAG,GAAI,EAAG,IAAK,CAAC,EAAG,EAAG,GAAI,IAAK,CAAC,EAAG,EAAG,IAAK,CAAC,EAAG,EAAG,GAAI,IAAK,CAAC,EAAG,EAAG,GAAI,IAAK,CAAC,EAAG,EAAG,GAAI,IAAK,CAAC,GAAI,EAAG,GAAI,IAAK,CAAC,GAAI,EAAG,EAAG,IAAK,CAAC,GAAI,EAAG,IAAK,CAAC,GAAI,EAAG,KACh4BD,KAAM,CAAC,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,GAAI,IAAK,CAAC,GAAI,EAAG,EAAG,GAAI,CAAC,EAAG,GAAI,EAAG,EAAG,GAAI,CAAC,EAAG,GAAI,EAAG,EAAG,GAAI,CAAC,EAAG,GAAI,EAAG,GAAI,CAAC,EAAG,GAAI,EAAG,EAAG,GAAI,CAAC,EAAG,GAAI,EAAG,EAAG,GAAI,CAAC,EAAG,GAAI,EAAG,GAAI,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,CAAC,GAAI,GAAI,EAAG,GAAI,CAAC,GAAI,GAAI,GAAI,CAAC,GAAI,GAAI,GAAI,CAAC,EAAG,GAAI,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAAK,CAAC,EAAG,EAAG,IAAK,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,CAAC,EAAG,EAAG,EAAG,IAAK,CAAC,EAAG,EAAG,EAAG,IAAK,CAAC,EAAG,EAAG,IAAK,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,CAAC,EAAG,EAAG,GAAI,IAAK,CAAC,EAAG,EAAG,IAAK,CAAC,EAAG,EAAG,IAAK,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,CAAC,EAAG,EAAG,GAAI,IAAK,CAAC,EAAG,EAAG,EAAG,IAAK,CAAC,GAAI,EAAG,IAAK,CAAC,GAAI,EAAG,EAAG,IAAK,CAAC,GAAI,EAAG,EAAG,IAAK,CAAC,GAAI,EAAG,EAAG,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,MAGv7BU,EAAO,CACXT,QAAS,CAAC,CAAC,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,EAAG,GAAI,CAAC,EAAG,GAAI,GAAI,CAAC,EAAG,EAAG,GAAI,GAAI,CAAC,EAAG,GAAI,IAAK,CAAC,GAAI,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAAK,CAAC,EAAG,EAAG,IAAK,CAAC,GAAI,GAAI,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,CAAC,EAAG,EAAG,EAAG,IAAK,CAAC,EAAG,GAAI,GAAI,CAAC,EAAG,EAAG,IAAK,CAAC,GAAI,IAAK,CAAC,EAAG,EAAG,EAAG,IAAK,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,GAAI,EAAG,GAAI,CAAC,GAAI,GAAI,CAAC,GAAI,GAAI,CAAC,GAAI,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,GAAI,CAAC,IAC3hBD,KAAM,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,IAAK,CAAC,IAAK,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,IAAK,CAAC,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,IAAK,CAAC,EAAG,EAAG,EAAG,IAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,IAAK,CAAC,GAAI,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,GAAI,EAAG,GAAI,CAAC,GAAI,GAAI,GAAI,CAAC,GAAI,GAAI,GAAI,CAAC,GAAI,GAAI,GAAI,CAAC,GAAI,GAAI,GAAI,CAAC,GAAI,GAAI,IAAK,CAAC,EAAG,GAAI,GAAI,IAAK,CAAC,E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","file":"static/js/main.b1e6920c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"grid_table__1oAvk\",\"cell\":\"grid_cell__2wQoM\",\"numberTable\":\"grid_numberTable__zT4nn\",\"numberCell\":\"grid_numberCell__2fVCk\",\"dotWrapper\":\"grid_dotWrapper__QkBTA\",\"dot\":\"grid_dot__1SvN3\",\"emptyAnimation\":\"grid_emptyAnimation__3EigN\",\"scanner\":\"grid_scanner__32DJQ\",\"empty\":\"grid_empty__3KZ3l\",\"filled\":\"grid_filled__3Fi4V\",\"fillAnimation\":\"grid_fillAnimation__kZZ-_\",\"inputs\":\"grid_inputs__3SXdY\",\"input\":\"grid_input__1rrvf\",\"actions\":\"grid_actions__1_7SJ\",\"description\":\"grid_description__3hQfJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"button_btn__3Eo3S\",\"disabled\":\"button_disabled__vZgGL\"};","export class Transition {\n  currentPosition : number | undefined;\n  nextByX : number | undefined;\n  nextByO : number | undefined;\n  constructor(currentPosition: number, nextByX: number | undefined, nextByO: number | undefined) {\n    this.currentPosition = currentPosition;\n    this.nextByX = nextByX;\n    this.nextByO = nextByO;\n  }\n\n  toString() {\n    return `Current: ${this.currentPosition}; X: ${this.nextByX}; O: ${this.nextByO}`;\n  }\n}\n\nexport type StateMachineMatrix = Array<Array<Array<number>>>;\n\nexport enum FieldPossibleValues {\n  UNDEFINED = 0,\n  WHITE_SQUARE = -1,\n  BLACK_SQUARE = 1,\n}\n\nexport enum StateMachineTransitions {\n  IDLE = 0,\n  TRANSITION = 1,\n}\n\nexport enum StateMatrixTransitions {\n  UNDEFINED = 0,\n  LEFT_O = 1,\n  LEFT_X = 2,\n  LEFT_TOP_O = 4,\n  LEFT_TOP_X = 8,\n}\n\nexport type FieldType<T = number> = Array<Array<T>>;\nexport type StateMatrixType = Array<Array<Array<number>>>;\n\nexport enum Speed {\n  slow = 60,\n  medium = 30,\n  fast = 0,\n}\n","export const APP_CONSTANTS = {\n  SET_RUNNING: 'APP__SET_RUNNING',\n  CHANGE_OPTION: 'APP__CHANGE_OPTION',\n  CHANGE_SPEED: 'APP__CHANGE_SPEED',\n  CLEAR_FIELD: 'APP__CLEAR_FIELD',\n  SET_CUSTOM_FIELD: 'APP__SET_CUSTOM_FIELD',\n};\n","import { Action } from '../../models/Action';\nimport { APP_CONSTANTS } from './constants';\nimport { Option } from '../../models/Option';\nimport { Speed } from '../../models';\n\nexport type AppState = {\n  rows: Array<Array<number>> | null;\n  columns: Array<Array<number>> | null;\n  running: boolean;\n  selectedOption: Option;\n  speed: Option;\n  clear: boolean;\n};\n\nconst QR = {\n  rows: [\n    [7, 2, 2, 7],\n    [1, 1, 1, 2, 1, 1],\n    [1, 3, 1, 3, 1, 1, 3, 1],\n    [1, 3, 1, 2, 1, 1, 3, 1],\n    [1, 3, 1, 2, 1, 3, 1],\n    [1, 1, 2, 2, 1, 1],\n    [7, 1, 1, 1, 7],\n    [2],\n    [2, 3, 2, 1, 4],\n    [1, 1, 3, 3, 2, 1],\n    [3, 1, 3, 2, 2],\n    [1, 1, 1, 3, 1, 1],\n    [1, 5, 1, 1, 1, 1],\n    [1, 1, 1, 1, 3, 1],\n    [7, 1, 1],\n    [1, 1, 1, 1, 1, 1, 1, 1],\n    [1, 3, 1, 1, 1, 2, 2],\n    [1, 3, 1, 2, 1, 2, 1, 1],\n    [1, 3, 1, 1, 1, 2],\n    [1, 1, 2, 1, 1],\n    [7, 1, 3, 1],\n  ],\n  columns: [\n    [7, 1, 2, 7],\n    [1, 1, 1, 1, 1, 1],\n    [1, 3, 1, 1, 1, 3, 1],\n    [1, 3, 1, 1, 1, 1, 3, 1],\n    [1, 3, 1, 1, 1, 1, 3, 1],\n    [1, 1, 2, 1, 1],\n    [7, 1, 1, 1, 7],\n    [4],\n    [4, 2, 2, 2, 2, 2],\n    [1, 2, 1, 1, 1, 2, 3],\n    [1, 2, 2, 2],\n    [2, 3, 1, 1, 1, 1, 1],\n    [3, 3, 2, 3, 1, 1],\n    [1, 1, 3, 2],\n    [7, 1, 1],\n    [1, 1, 1, 1, 1, 1, 1],\n    [1, 3, 1, 3, 2, 3],\n    [1, 3, 1, 2, 2, 1, 1],\n    [1, 3, 1, 1, 1, 1, 1],\n    [1, 1, 5, 3],\n    [7, 1, 1, 2, 1],\n  ]\n};\n\nconst Bunny = {\n  rows: [\n    [5, 5],\n    [3, 1, 2],\n    [1, 5, 2],\n    [1, 4, 5, 1],\n    [8, 4, 1],\n    [3, 4, 1],\n    [2, 3, 1],\n    [2, 3, 1],\n    [3, 2, 1],\n    [1, 2],\n    [7, 1],\n    [1, 1, 1, 2],\n    [1, 1, 1, 1, 1, 1],\n    [1, 2, 1, 1, 1],\n    [2, 8, 1],\n    [4, 4, 1, 4],\n    [1, 1, 1, 1, 1],\n    [3, 3, 1, 3],\n    [1, 2, 1, 1, 1, 2],\n    [1, 3, 1, 6, 1],\n  ],\n  columns: [\n    [2],\n    [2, 1, 1, 1],\n    [1, 1, 1, 1, 1],\n    [1, 2, 3, 1],\n    [1, 2, 2, 2],\n    [1, 2, 2, 2],\n    [1, 3, 3, 1, 1],\n    [1, 2, 1, 2, 2],\n    [1, 6, 1, 2, 1],\n    [2, 3, 1, 6],\n    [1, 2, 1, 6, 1],\n    [1, 4, 1, 1, 2],\n    [1, 7, 1, 1, 1, 1, 1],\n    [1, 7, 1, 1, 1],\n    [2, 5, 2, 2, 1, 1],\n    [2, 1, 1, 1],\n    [10, 1, 2],\n    [3, 1, 2],\n    [4, 1],\n    [1, 1],\n  ],\n};\n\nconst Aries = {\n  rows: [\n    [8],\n    [3, 3, 3, 3],\n    [10, 2, 10],\n    [3, 2, 2, 2, 4, 2],\n    [2, 2, 1, 2, 2, 2],\n\n    [2, 6, 1, 1, 2],\n    [1, 2, 2, 2, 2],\n    [1, 2, 2, 2, 4, 2],\n    [1, 2, 1, 1, 7, 2, 2],\n    [1, 3, 1, 12],\n\n    [2, 2, 12],\n    [2, 2, 7, 3],\n    [4, 7, 1, 1],\n    [7, 2],\n    [2, 8, 6],\n\n    [4, 9, 9],\n    [6, 24],\n    [3, 4, 24],\n    [3, 28],\n    [3, 1, 24],\n\n    [3, 19, 3],\n    [6, 4, 5, 7, 2],\n    [11, 6, 7],\n    [4, 10, 2, 4],\n    [4, 5, 8],\n\n    [3, 3, 4],\n    [2, 3, 3],\n    [4, 3, 3],\n    [3, 4, 4, 2, 1],\n    [1, 3, 3, 3, 2, 1],\n\n    [1, 5, 2, 3, 2],\n    [2, 21, 2],\n    [2, 3, 1],\n    [1, 2, 1, 3, 2, 4, 4, 2],\n    [2, 2, 1, 2, 1, 2, 2, 2, 2],\n\n    [2, 4, 2, 1, 2, 3, 4, 1],\n    [1, 2, 1, 3, 2, 2, 2, 3],\n    [4, 1, 2, 2, 4, 4, 1, 1, 1],\n    [4, 3, 1, 1],\n    [23, 2, 1],\n  ],\n  columns: [\n    [2, 4, 3],\n    [3, 1, 2, 2, 1],\n    [6, 4, 3, 2, 3, 1],\n    [2, 2, 3, 4, 1, 2],\n    [2, 2, 2, 3, 4, 2, 4, 1],\n\n    [2, 4, 1, 4, 4, 1, 5, 2],\n    [2, 2, 1, 1, 5, 3, 1, 1, 1, 2],\n    [2, 1, 2, 2, 3, 3, 1, 5, 1],\n    [2, 1, 1, 2, 2, 3, 2, 1],\n    [3, 1, 4, 4, 1, 5, 1, 5, 1],\n\n    [1, 1, 1, 9, 4, 1, 4, 1],\n    [1, 1, 1, 12, 3, 1, 1, 2, 1],\n    [1, 1, 1, 17, 1, 2, 1, 1],\n    [1, 1, 19, 1, 1],\n    [1, 2, 17, 1, 5, 1],\n\n    [2, 2, 14, 1, 1, 5, 1],\n    [2, 1, 5, 7, 2, 1, 1],\n    [2, 1, 4, 9, 1, 5, 1],\n    [2, 5, 1, 8, 2, 1, 5, 1],\n    [5, 3, 1, 7, 3, 1, 1, 1, 1, 1],\n\n    [7, 7, 3, 1, 1, 1, 1],\n    [4, 9, 3, 1, 1],\n    [2, 5, 5, 1, 3, 1, 1],\n    [8, 3, 3, 3, 1, 1],\n    [8, 2, 4, 1, 3, 1],\n\n    [2, 11, 2, 1, 1, 3, 1],\n    [4, 12, 2, 1, 2],\n    [2, 1, 15, 1, 2],\n    [3, 14, 2, 1],\n    [7, 9, 2, 1, 1],\n\n    [7, 6, 2, 3],\n    [3, 7, 2, 1],\n    [2, 1, 6, 2, 3, 4],\n    [4, 4, 1, 2, 2, 1],\n    [2, 4, 2, 1],\n  ],\n};\n\nconst Flower = {\n  rows: [\n    [3],\n    [1, 1],\n    [1, 1],\n    [1, 2],\n    [1, 1, 1, 2],\n\n    [1, 1, 2, 2],\n    [1, 6, 2, 1, 2],\n    [1, 2, 2, 1, 5],\n    [1, 2, 1, 1, 2],\n    [1, 6, 1, 3],\n\n    [2, 2, 2, 2, 2],\n    [2, 3, 8],\n    [2, 2, 2, 2],\n    [2, 1, 1, 1],\n    [2, 1, 2, 2],\n\n    [2, 2, 2, 4, 1],\n    [2, 2, 1, 3, 5],\n    [2, 3, 4, 2, 1],\n    [2, 14, 2],\n    [2, 7, 4],\n\n    [2, 3, 3],\n    [2, 3, 2],\n    [2, 3],\n    [1, 22],\n    [24],\n  ],\n  columns: [\n    [20],\n    [13, 1],\n    [2],\n    [2, 3],\n    [3, 4],\n\n    [1, 1, 5],\n    [1, 1, 3, 2],\n    [1, 2, 6, 2],\n    [1, 11, 2],\n    [1, 2, 3, 2],\n\n    [2, 2, 2, 2, 2],\n    [1, 9, 3, 2],\n    [1, 5, 2],\n    [3, 2, 2, 2],\n    [4, 3, 2, 2],\n\n    [8, 1, 1, 2],\n    [3, 1, 1, 2],\n    [2, 1, 1, 1, 2],\n    [2, 2, 2, 1, 1, 2],\n    [4, 2, 1, 1, 2],\n\n    [1, 1, 2, 2, 2],\n    [2, 1, 3, 1, 2],\n    [2, 2, 5, 2],\n    [3, 1, 4, 2],\n    [4, 2, 1],\n  ],\n};\n\nconst Dog = {\n  rows: [[4], [8, 2], [10, 5], [8, 5], [7, 2, 1, 5], [4, 4, 8], [4, 2, 2, 1, 6], [8, 8], [6, 1, 4], [4, 4], [3, 4, 3], [4, 3, 1], [4, 1, 1, 2], [1, 1, 1, 6, 1], [1, 1]],\n  columns: [[4, 1], [7, 1], [9, 3], [13], [13], [4, 5], [4, 4, 1], [3, 4, 1, 1], [1, 2, 1, 1], [2, 4, 1, 1], [1, 2, 2, 1], [4], [3, 2, 1], [1, 2, 2, 2], [2, 3, 2, 1, 1], [10, 1], [9], [8], [6], [4]]\n};\n\nconst Queen = {\n  columns: [[33, 1, 6, 2], [1, 1, 1, 1, 2, 3, 2], [1, 4, 2, 3, 1, 1, 2, 1], [1, 6, 3, 1, 6, 1, 3], [1, 7, 3, 2, 3, 7], [1, 7, 1, 6, 2, 1, 2], [1, 8, 2, 7, 2, 3, 1], [1, 8, 3, 6, 3, 2, 2, 1], [1, 10, 3, 3, 4, 9, 2], [16, 4, 2, 1, 2, 4], [1, 10, 3, 3, 2, 2, 4, 2, 3], [1, 8, 3, 1, 4, 4, 2, 3, 2], [1, 8, 2, 3, 2, 3, 2, 2, 1], [1, 7, 1, 1, 2, 1, 2, 3, 5], [1, 7, 5, 4, 6, 1, 4], [1, 6, 1, 3, 1, 8, 2, 1, 2], [1, 4, 3, 2, 10, 1, 1, 1], [1, 19, 1], [1, 2, 1, 11, 2, 1], [1, 3, 1, 2, 10, 1], [1, 3, 1, 2, 1, 10, 1], [1, 6, 6, 2, 2, 14], [3, 2, 2, 1, 2, 5, 1, 10], [2, 1, 3, 1, 1, 1, 1, 2, 3, 10], [3, 1, 1, 1, 2, 1, 3, 13], [4, 1, 2, 1, 3, 1, 3, 12], [4, 1, 1, 4, 1, 2, 1, 14], [5, 1, 20], [7, 3, 1, 1, 15], [1, 12, 2, 1, 14], [2, 12, 2, 1, 13], [6, 10, 1, 1, 13], [2, 4, 7, 1, 11], [1, 2, 4, 5, 1, 10, 3], [2, 2, 5, 5, 9, 2], [3, 6, 4, 5, 8, 4], [1, 2, 2, 3, 2, 10], [4, 2, 5, 2, 7, 5], [3, 7, 3, 3, 2, 3, 1], [3, 2, 5, 3, 2, 3, 4, 2], [2, 2, 4, 2, 2, 3, 4], [2, 3, 3, 3, 2, 6], [1, 3, 2, 3, 9]],\n  rows: [[22, 5, 3, 4, 3], [1, 1, 7, 3, 2, 4], [1, 3, 1, 5, 3, 5], [1, 3, 2, 4, 1, 2, 2, 3], [1, 5, 1, 3, 1, 2, 5], [1, 7, 1, 4, 2, 2, 2, 2], [1, 11, 2, 2, 1, 4], [1, 13, 5, 3, 1, 1, 2], [1, 15, 2, 1, 2, 2, 2, 1, 1], [1, 15, 1, 2, 2, 1, 2, 2], [1, 15, 2, 4, 1, 1, 2], [1, 15, 1, 4, 2, 2, 1], [1, 4, 1, 4, 3, 4, 1, 1, 2], [1, 3, 3, 3, 1, 1, 2], [1, 5, 2, 3, 1, 1, 1], [1, 7, 1, 4, 2, 2, 2], [1, 3, 3, 1, 3, 1, 1, 1], [1, 4, 3, 1, 2, 2], [1, 1, 3, 3, 4, 2, 1, 1], [1, 1, 3, 3, 2, 1, 3, 2, 2, 1], [1, 2, 1, 3, 1, 2, 1, 2, 2, 2], [1, 1, 2, 5, 2, 2, 5, 1, 1], [1, 2, 1, 2, 4, 4, 2, 2, 2, 2], [1, 2, 1, 2, 1, 2, 2, 5, 2, 2, 1], [4, 2, 6, 2, 5, 2, 2], [1, 3, 2, 2, 6, 15, 1], [1, 4, 2, 1, 1, 2, 1, 2, 2, 2], [1, 5, 2, 2, 1, 3, 1, 3, 1], [1, 6, 2, 4, 3, 3, 2, 1], [1, 4, 6, 7, 3, 1, 4], [3, 2, 2, 9, 1, 13], [1, 2, 2, 1, 26], [2, 1, 2, 2, 25, 1], [3, 2, 1, 25, 2], [2, 2, 3, 24, 1], [5, 1, 2, 22, 2], [1, 1, 2, 2, 2, 21, 1, 2], [3, 1, 3, 2, 19, 1, 1, 1], [5, 3, 2, 3, 1, 14, 1, 1, 1], [2, 2, 2, 1, 1, 4, 13, 3, 2], [1, 1, 1, 4, 2, 10, 3, 2], [1, 2, 2, 5, 1, 8, 1, 1, 1, 3], [4, 2, 1, 2, 7, 1, 1, 3], [2, 3, 4, 3, 4, 3, 4], [1, 9, 1, 2, 2, 5]]\n};\n\nconst Something = {\n  columns: [[23, 1], [9, 1, 2, 1], [4, 1, 2, 2, 1], [1, 8, 2, 1], [10, 6, 1], [4, 2, 1, 3, 1], [5, 2, 2, 1], [4, 4, 1, 2, 1], [1, 3, 3, 2, 1], [5, 2, 3, 2, 2], [8, 2, 3, 6], [10, 2, 3, 1, 2], [12, 2, 11, 1, 1], [1, 11, 5, 9, 2, 1], [2, 11, 11, 6, 8, 1], [3, 10, 5, 5, 5, 2, 1], [4, 8, 2, 3, 2, 3, 2, 1], [6, 5, 6, 6, 3, 1, 1], [5, 2, 3, 3, 8, 3, 1, 1], [6, 3, 2, 2, 1, 4, 2, 1], [7, 2, 6, 4, 2, 2], [1, 6, 6, 5, 2, 2], [1, 7, 4, 9, 2], [1, 8, 2, 11, 1], [1, 8, 8, 1, 1, 1], [1, 9, 8, 1, 2], [1, 9, 8, 1, 2], [1, 8, 8, 2, 2], [1, 8, 8, 2, 2], [1, 8, 7, 1, 2], [8, 7, 1, 1], [4, 7, 2, 1], [4, 9, 1, 1], [3, 9, 3, 1], [3, 8, 4, 1], [4, 6, 2, 1, 1], [1, 4, 2, 4, 1, 1, 1], [2, 4, 2, 3, 2, 1, 1], [3, 3, 5, 3, 2], [5, 3, 1, 2, 2, 2, 1], [6, 2, 1, 1, 1, 4, 1, 1], [7, 1, 2, 2, 4, 1, 1], [6, 1, 2, 2, 3], [4, 3, 3, 4], [3, 3, 1, 3, 3], [7, 1, 1, 5], [7, 1, 2, 5], [7, 1, 3, 5], [7, 2, 3], [5, 2, 6]],\n  rows: [[4], [6], [1, 4, 1], [1, 7], [2, 5, 1], [3, 4, 2], [1, 1, 5, 1], [3, 5, 2], [2, 1, 4, 2], [3, 5, 1], [2, 1, 4, 1], [3, 4, 1], [1, 1, 3, 2], [3, 4, 1], [1, 1, 3, 1], [3, 3, 2], [1, 7], [3, 3, 1], [6, 1], [3, 5, 4], [9, 5, 1], [1, 2, 2, 4, 2], [1, 2, 3, 1, 4, 3], [1, 2, 5, 1, 4, 4], [1, 2, 6, 3, 9], [1, 1, 1, 2, 4, 2, 10], [1, 1, 1, 4, 6, 1, 9], [1, 3, 3, 8, 2, 5], [1, 2, 3, 10, 3, 4], [1, 1, 1, 2, 19, 3], [1, 1, 1, 2, 3, 20], [1, 1, 1, 1, 2, 17, 1], [1, 2, 3, 2, 2, 10, 2, 1], [2, 2, 3, 2, 3, 7, 2, 3, 1, 5], [2, 2, 6, 4, 6, 3, 5, 2], [2, 3, 2, 3, 4, 2, 4, 1, 2], [3, 1, 2, 2, 3, 5, 11], [5, 3, 4, 17], [7, 3, 16], [8, 23, 1], [2, 1, 2, 19, 3], [4, 1, 16, 1, 4], [1, 2, 1, 14, 1, 2, 4], [1, 4, 1, 10, 2, 8], [5, 1, 1, 2, 11, 1], [1, 2, 2, 22, 2, 3, 1], [17, 5, 2, 1, 5, 1, 1, 3, 1], [9, 1, 2, 11], [14, 14, 8], [12, 10, 12]]\n};\n\nconst Bacterium = {\n  columns: [[9, 4, 5, 9], [7, 6, 7, 3, 7], [6, 6, 7, 5, 6], [5, 4, 6, 5, 7, 5], [4, 6, 4, 3, 7, 4], [3, 7, 2, 1, 2, 5, 3], [2, 7, 2, 2, 2, 4, 3, 2], [1, 7, 1, 2, 2, 2, 1, 2, 5, 1], [1, 5, 1, 1, 9, 2, 1, 7, 1], [1, 1, 14, 1, 1, 7], [1, 18, 1, 6], [1, 29, 3], [4, 28, 2, 5], [5, 27, 1, 7], [6, 2, 24, 7], [12, 19, 8], [13, 27], [3, 7, 9, 9, 3], [9, 3, 7, 10], [2, 10, 1, 3, 7, 1, 8, 5], [3, 11, 1, 3, 7, 2, 6, 7], [4, 9, 1, 3, 7, 3, 5, 8], [18, 3, 7, 2, 13], [18, 7, 4, 6, 4], [4, 24, 3, 5, 2], [3, 1, 24, 3, 6, 2], [3, 12, 6, 7, 4, 5], [1, 11, 3, 6, 2, 12], [3, 10, 1, 3, 6, 7, 12], [16, 1, 3, 5, 2, 3, 6], [17, 1, 3, 5, 8, 3, 6], [16, 3, 5, 2, 7, 5], [6, 8, 5, 7, 6, 3], [6, 7, 7, 4, 4, 1], [5, 6, 7, 4, 4], [3, 6, 9, 4, 6, 3], [4, 14, 3, 6, 5], [2, 12, 2, 8, 6], [1, 12, 8, 10], [3, 22, 9], [3, 23, 8], [4, 3, 15, 1, 1, 7], [1, 6, 1, 2, 10, 3, 1, 5, 1, 1], [1, 8, 3, 2, 2, 1, 3, 3, 1, 1], [2, 8, 2, 3, 4, 6, 1, 1, 2], [3, 8, 4, 1, 1, 1, 1, 6, 3, 3], [4, 6, 6, 2, 8, 4], [5, 4, 8, 4, 8, 5], [6, 8, 6, 6, 6], [7, 8, 6, 4, 7], [9, 8, 5, 9]],\n  rows: [[9, 8, 4, 9], [7, 8, 6, 7], [6, 4, 7, 8, 6], [5, 6, 4, 8, 5], [4, 6, 2, 8, 3, 4], [3, 6, 2, 1, 1, 6, 5, 3], [2, 5, 1, 2, 1, 3, 1, 7, 2], [1, 3, 2, 10, 2, 7, 1], [1, 4, 2, 21, 8, 1], [5, 23, 9], [6, 1, 21, 2, 5], [6, 26, 2, 3], [6, 27], [11, 20, 3, 2], [3, 3, 18, 6, 4], [3, 16, 7, 5], [6, 13, 5, 1, 6], [3, 4, 6, 7, 6], [5, 8, 3, 2, 3, 7, 8], [5, 6, 1, 1, 2, 1, 1, 16], [15, 5, 2, 5, 10, 5], [16, 5, 2, 5, 10, 4], [3, 10, 3, 2, 3, 13], [1, 10, 2, 6, 6], [31, 4, 2, 3], [2, 30, 4, 4], [5, 27, 1, 12], [34, 2, 6, 5], [32, 2, 4, 1, 4], [4, 20, 1, 3, 4, 2, 2], [4, 19, 1, 1, 2, 5, 1], [2, 9, 1, 1, 1, 4, 7, 2], [2, 7, 3, 1, 2, 1, 5, 4, 7], [16, 2, 1, 2, 6, 5, 7], [7, 8, 10, 2, 6, 6], [6, 11, 3, 3, 1, 1, 8, 6], [6, 10, 1, 1, 1, 1, 5, 1, 6], [4, 15, 1, 1, 1, 6, 1, 5], [2, 5, 11, 8, 2], [7, 22, 2], [7, 1, 18, 3], [6, 2, 17, 6], [1, 4, 2, 2, 7, 3, 9, 1], [1, 2, 4, 1, 3, 1, 2, 1, 9, 1, 1], [2, 5, 3, 1, 2, 1, 9, 1, 2], [3, 7, 5, 4, 8, 1, 3], [4, 7, 6, 6, 6, 2, 4], [5, 7, 6, 7, 5, 5], [6, 5, 5, 8, 6], [7, 3, 4, 8, 7], [9, 2, 6, 9]],\n};\n\nconst GaryGrant = {\n  columns: [[17], [17], [18], [11, 19], [3, 2, 20], [6, 2, 22], [7, 5, 2, 23], [21, 2, 5, 14], [26, 3, 3, 12], [26, 14, 8], [23, 13], [23, 14], [22, 10], [1, 18, 8], [5, 9, 6], [8, 6, 6], [9, 5, 2, 6], [11, 4, 4], [11, 2, 1, 3], [12, 3, 1, 3], [13, 3, 1, 1, 3], [14, 4, 1, 1, 3], [14, 4, 1, 1, 3], [15, 3, 2, 1, 3], [16, 2, 1, 1, 2, 4], [17, 1, 2, 4, 1, 1, 4], [17, 4, 3, 1, 2, 5], [17, 4, 3, 1, 2, 6], [17, 4, 2, 1, 2, 7], [3, 7, 5, 2, 1, 2, 5], [3, 7, 5, 2, 1, 2, 4], [3, 6, 5, 2, 1, 2, 4], [3, 6, 5, 2, 1, 1, 4], [4, 13, 5, 3, 1, 2, 5], [5, 13, 5, 6, 2, 1, 5], [5, 12, 1, 2, 4, 1, 6], [5, 12, 3, 1, 1, 7], [5, 11, 3, 1, 8], [5, 10, 4, 9], [6, 9, 4, 10], [6, 8, 3, 11], [1, 6, 8, 3, 1, 13], [1, 6, 8, 6, 16], [1, 1, 13, 5, 19], [2, 1, 13, 5, 20], [4, 1, 12, 5, 24], [5, 2, 14, 37], [6, 1, 55], [7, 1, 23, 29], [8, 1, 20, 31], [9, 1, 16, 33], [10, 4, 10, 35], [11, 2, 3, 37], [19, 1, 43], [20, 2, 41]],\n  rows: [[20, 14], [24, 11], [27, 10], [15, 11, 10], [18, 9, 1, 9], [2, 18, 7, 1, 8], [3, 21, 6, 1, 7], [4, 23, 7, 6], [6, 24, 4, 1, 5], [6, 27, 4, 1, 4], [7, 31, 1, 3], [9, 10, 17, 1, 2], [10, 12, 17, 1, 2], [10, 29, 1, 2], [10, 29, 2], [10, 28, 2], [9, 26, 3], [8, 8, 9, 3], [10, 5, 8, 2], [9, 7, 1], [9, 8], [9, 7, 1], [10, 6, 2], [10, 5, 1], [2, 8, 5, 2], [1, 7, 5, 2], [1, 6, 5, 2], [1, 6, 5, 2], [1, 5, 5, 3], [1, 4, 5, 3], [1, 4, 6, 5, 4], [1, 4, 9, 8, 4], [1, 3, 2, 8, 8, 5], [1, 1, 2, 3, 2, 13, 5], [2, 2, 4, 14, 6], [2, 2, 2, 5, 2, 5, 3, 2, 6], [5, 2, 3, 2, 2, 9], [5, 1, 4, 9], [3, 2, 9], [3, 1, 9], [4, 9], [5, 10], [6, 1, 10], [3, 3, 1, 2, 10], [3, 4, 1, 2, 10], [4, 4, 2, 2, 11], [4, 4, 3, 3, 12], [5, 4, 9, 12], [7, 5, 7, 12], [7, 4, 13], [7, 3, 4, 4, 13], [8, 4, 12, 13], [8, 4, 14], [9, 5, 14], [9, 4, 2, 2, 15], [9, 4, 10, 16], [9, 4, 6, 17], [10, 3, 18], [10, 3, 1, 19], [10, 4, 2, 20], [10, 4, 4, 22], [10, 36], [10, 34], [10, 33], [10, 31]],\n};\n\nconst Cats = {\n  columns: [[8], [8, 3], [8, 6], [2, 4, 3, 2], [2, 5, 4, 2], [8, 5, 2], [8, 7, 2], [5, 4, 8, 1], [3, 7, 9, 1], [4, 6, 9, 1], [12, 3, 9, 1, 2], [8, 5, 3, 10, 1, 2], [9, 3, 14, 2, 2], [8, 13, 5], [2, 4, 13, 3], [2, 11, 11], [16, 5], [5, 3, 5, 6], [2, 5, 5, 7], [3, 4, 5, 9], [9, 4, 18], [9, 6, 17], [16, 13, 2], [4, 3, 3, 13], [2, 2, 5, 12], [8, 12, 2], [5, 4, 14], [11, 13], [2, 5, 2, 11], [3, 3, 2, 7], [8, 2, 2], [7, 3, 3, 4], [4, 4, 5, 2, 1], [2, 10, 2, 1], [10, 2], [10, 3], [10, 2], [9, 2], [9, 2], [8, 2], [7, 1], [3, 1], [3, 2], [6], [4]],\n  rows: [[2, 2], [3, 4], [12], [12], [4, 2, 4], [4, 4, 5], [15], [8, 6], [1, 3, 11, 1], [3, 4, 6, 2, 3], [12, 3, 11], [8, 3, 2, 12], [3, 4, 3, 2, 3, 3, 4], [3, 9, 2, 3, 5, 4], [7, 4, 3, 13], [11, 3, 6, 5], [9, 3, 8], [8, 4, 5], [5, 4, 2], [3, 4, 2], [4, 6, 2], [4, 7, 2], [4, 7, 3], [6, 8, 5], [9, 9, 6], [11, 9, 7], [12, 10, 8], [12, 12, 8], [12, 13, 9], [12, 13, 9], [12, 13, 10], [2, 10, 13, 10], [2, 8, 13, 12], [2, 5, 4, 9], [2, 4, 4, 4, 4], [2, 3, 3, 3, 2], [2, 2, 3, 2], [3, 2, 6, 2], [4, 4, 2, 6, 2], [8, 3, 8]],\n};\n\nexport const NonogramOptions: Option[] = [\n  {\n    label: 'QR code',\n    value: 1,\n  },\n  {\n    label: 'Custom Field',\n    value: -1,\n  },\n  {\n    label: 'Bunny',\n    value: 2,\n  },\n  {\n    label: 'Aries',\n    value: 3,\n  },\n  {\n    label: 'Flower',\n    value: 4,\n  },\n  {\n    label: 'Dog',\n    value: 5,\n  },\n  {\n    label: 'Queen of Spades',\n    value: 6,\n  },\n  {\n    label: 'Something',\n    value: 7,\n  },\n  {\n    label: 'Bacterium',\n    value: 8,\n  },\n  {\n    label: 'Gary Grant',\n    value: 9,\n  },\n  {\n    label: 'Cats',\n    value: 10,\n  }\n];\n\nconst imagesMapper = (value: number): { rows: Array<Array<number>> | null, columns: Array<Array<number>> | null } => {\n  const image: any = {\n    1: QR,\n    2: Bunny,\n    3: Aries,\n    4: Flower,\n    5: Dog,\n    6: Queen,\n    7: Something,\n    8: Bacterium,\n    9: GaryGrant,\n    10: Cats,\n  };\n\n  const response = image[value];\n\n  if (response) {\n    return response;\n  }\n\n  return {\n    rows: null,\n    columns: null,\n  };\n};\n\nexport const SpeedOptions: Option[] = [\n  {\n    label: 'Slow',\n    value: Speed.slow,\n  },\n  {\n    label: 'Medium',\n    value: Speed.medium,\n  },\n  {\n    label: 'Fast',\n    value: Speed.fast,\n  },\n];\n\nconst initialState: AppState = {\n  ...imagesMapper(NonogramOptions[0].value),\n  selectedOption: NonogramOptions[0],\n  running: false,\n  speed: SpeedOptions[2],\n  clear: false,\n};\n\nconst app = (state: AppState = initialState, action: Action) => {\n  switch (action.type) {\n    case APP_CONSTANTS.SET_RUNNING: {\n      return {\n        ...state,\n        running: action.payload,\n      };\n    }\n    case APP_CONSTANTS.CHANGE_OPTION: {\n      const option: Option = action.payload;\n      return {\n        ...state,\n        ...imagesMapper(option.value),\n        selectedOption: option,\n        running: false,\n      }\n    }\n    case APP_CONSTANTS.CHANGE_SPEED: {\n      const option: Option = action.payload;\n      return {\n        ...state,\n        speed: option,\n      };\n    }\n    case APP_CONSTANTS.CLEAR_FIELD: {\n      return {\n        ...state,\n        clear: action.payload,\n      };\n    }\n    case APP_CONSTANTS.SET_CUSTOM_FIELD: {\n      return {\n        ...state,\n        rows: action.payload.rows,\n        columns: action.payload.columns,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default app;\n","import { createStore, combineReducers } from 'redux';\n\nimport app, { AppState } from './app/reducer';\n\nexport type RootState = {\n  app: AppState;\n}\n\nconst rootReducer = combineReducers({\n  app,\n});\n\nexport default createStore(rootReducer);\n","import React from 'react';\nimport styles from './button.module.scss';\n\ntype Props = {\n  title: string;\n  onClick: () => void;\n  disabled?: boolean;\n  className?: string;\n};\n\nexport const Button = (props: Props) => {\n  const { title, onClick, disabled = false, className = '' } = props;\n\n  const classes = [styles.btn, className];\n\n  if (disabled) {\n    classes.push(styles.disabled);\n  }\n\n  return (\n    <button disabled={disabled} className={classes.join(' ')} onClick={onClick} type=\"button\">{title}</button>\n  );\n};\n","import { Action } from '../../models/Action';\nimport { APP_CONSTANTS } from './constants';\nimport { Option } from '../../models/Option';\n\nexport const AppActions = {\n  setRunning: (value: boolean): Action<boolean> => {\n    return {\n      type: APP_CONSTANTS.SET_RUNNING,\n      payload: value,\n    };\n  },\n  changeOption: (option: Option): Action<Option> => {\n    return {\n      type: APP_CONSTANTS.CHANGE_OPTION,\n      payload: option,\n    };\n  },\n  changeSpeed: (option: Option): Action<Option> => {\n    return {\n      type: APP_CONSTANTS.CHANGE_SPEED,\n      payload: option,\n    };\n  },\n  clearField: (clear: boolean) => {\n    return {\n      type: APP_CONSTANTS.CLEAR_FIELD,\n      payload: clear,\n    };\n  },\n  setCustomFields: (rows: Array<Array<number>>, columns: Array<Array<number>>) => {\n    return {\n      type: APP_CONSTANTS.SET_CUSTOM_FIELD,\n      payload: {\n        rows,\n        columns,\n      },\n    };\n  }\n};\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 0h24v24H0z\",\n  fill: \"none\"\n});\n\nvar SvgExpandMore = function SvgExpandMore(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 24 24\",\n    fill: \"black\",\n    width: \"18px\",\n    height: \"18px\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgExpandMore, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/expand_more.cb42b4c5.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useCallback, useState } from 'react';\nimport styles from './select.module.scss';\nimport { Option } from '../../models/Option';\nimport { ReactComponent as Expand } from './expand_more.svg';\n\n\ntype Props = {\n  options: Option[];\n  value: Option;\n  onChange: (value: Option) => void;\n  placeholder?: string;\n  className?: string;\n  disabled?: boolean;\n  prefix?: string;\n};\n\nexport const Select = (props: Props) => {\n  const { options, value, onChange, disabled, prefix = '', className = '', placeholder = 'Select...' } = props;\n  const [opened, setOpened] = useState<boolean>(false);\n\n  const handleChange = useCallback((option: Option) => () => {\n    onChange(option);\n    toggleOpen();\n  }, [onChange, opened]);\n  const toggleOpen = useCallback(() => {\n    setOpened(!opened);\n  }, [opened]);\n\n  return (\n    <div className={[styles.wrapper, className, disabled ? styles.disabled : ''].join(' ')}>\n      <div className={styles.select} onClick={toggleOpen}>\n        <div className={styles.label}>{value ? prefix ? `${prefix} ${value.label}` : value.label : placeholder}</div>\n        <div className={styles.arrow}>\n          <Expand/>\n        </div>\n      </div>\n      {opened &&\n      <ul className={styles.list}>\n        {options.map((o) => {\n          return (\n            <li className={styles.item} onClick={handleChange(o)} key={o.value}>{o.label}</li>\n          )\n        })}\n      </ul>\n      }\n    </div>\n  )\n};\n","import React, { useCallback } from 'react';\nimport styles from './header.module.scss';\nimport { Button } from '../button';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../store';\nimport { AppActions } from '../../store/app/actions';\nimport { Select } from '../select';\nimport { NonogramOptions, SpeedOptions } from '../../store/app/reducer';\nimport { Option } from '../../models/Option';\n\nexport const Header = () => {\n  const dispatch = useDispatch();\n  const { running, selectedOption, speed, clear } = useSelector((state: RootState) => state.app);\n\n  const handleClick = useCallback(() => {\n    dispatch(AppActions.setRunning(!running));\n  }, [running]);\n\n  const handleChangeOption = useCallback((option: Option) => {\n    dispatch(AppActions.changeOption(option));\n  }, [dispatch]);\n\n  const handleChangeSpeed = useCallback((option: Option) => {\n    dispatch(AppActions.changeSpeed(option));\n  }, [dispatch]);\n\n  const handleClear = useCallback(() => {\n    dispatch(AppActions.clearField(!clear));\n  }, [clear]);\n\n  return (\n    <nav className={styles.navigation}>\n      <div className={styles.name}>Nonogram solver Visualizer</div>\n      <Select disabled={running} className={styles.selector} options={NonogramOptions} value={selectedOption} onChange={handleChangeOption}/>\n      <Select disabled={running} className={styles.selector} options={SpeedOptions} prefix={'Speed:'} value={speed} onChange={handleChangeSpeed}/>\n      <Button disabled={running} className={styles.btn} title={'Visualize!'} onClick={handleClick}/>\n      <Button disabled={running} className={styles.btn} title={'Clear Field!'} onClick={handleClear}/>\n      <div className={styles.github}>\n        <a target={'_blank'} href=\"https://github.com/Sergey121/nonogram-app/\">View on GitHub</a>\n      </div>\n    </nav>\n  )\n};\n","import {\n  FieldPossibleValues,\n  FieldType, StateMachineMatrix,\n  StateMachineTransitions,\n  StateMatrixTransitions,\n  StateMatrixType,\n  Transition\n} from '../models';\n\nexport const isArraysEqual = (a: Array<number>, b: Array<number>) => {\n  for (let ii = 0; ii < a.length; ii++) {\n    if (a[ii] !== b[ii]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nexport function every(arr: Array<number>, value: number): boolean {\n  for (let ii = 0; ii < arr.length; ii++) {\n    if (arr[ii] !== value) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function sum(arr: Array<number>): number {\n  return arr.reduce((acc, v) => {\n    acc += v;\n    return acc;\n  }, 0);\n}\n\nexport const createRowFromColumn = (array: FieldType, colIndex: number): Array<number> => {\n  const result = [];\n  for (let row = 0; row < array.length; row++) {\n    result[row] = array[row][colIndex];\n  }\n  return result;\n};\n\nexport const applyColumnResult = (array: FieldType, colIndex: number, result: Array<number>): void => {\n  for (let row = 0; row < array.length; row++) {\n    array[row][colIndex] = result[row];\n  }\n};\n\nexport const resolveNonogram = (rows: Array<Array<number>>, cols: Array<Array<number>>): Promise<FieldType> => {\n  return new Promise<FieldType>((resolve, reject) => {\n    try {\n      const Field = createField(rows, cols);\n\n      let hasChanges;\n\n      do {\n        hasChanges = false;\n\n        // Go through rows\n        for (let rowNumber = 0; rowNumber < rows.length; rowNumber++) {\n          const row = Field[rowNumber];\n\n          if (!row.includes(0)) {\n            continue;\n          }\n\n          const rowDefinition = rows[rowNumber];\n\n          if (every(row, 0) && sum(rowDefinition) < row.length / 2) {\n            continue;\n          }\n\n          const result = tryResolveRow(row, rowDefinition);\n          if (!isArraysEqual(row, result)) {\n            hasChanges = true;\n          }\n          Field.splice(rowNumber, 1, result);\n        }\n\n        // Go through columns\n        for (let colNumber = 0; colNumber < cols.length; colNumber++) {\n          const row = createRowFromColumn(Field, colNumber);\n\n          if (!row.includes(0)) {\n            continue;\n          }\n\n          const colDefinition = cols[colNumber];\n\n          if (every(row, 0) && sum(colDefinition) < row.length / 2) {\n            continue;\n          }\n\n          const result = tryResolveRow(row, colDefinition);\n          if (!isArraysEqual(row, result)) {\n            hasChanges = true;\n          }\n          applyColumnResult(Field, colNumber, result);\n        }\n      } while (hasChanges);\n\n      resolve(Field);\n    } catch (e) {\n      reject(e);\n    }\n  })\n};\n\nexport const createField = (rows: Array<Array<number>>, cols: Array<Array<number>>): FieldType => {\n  const Field: FieldType = [];\n\n  // Create empty field\n  for (let ii = 0; ii < rows.length; ii++) {\n    const row = [];\n    for (let jj = 0; jj < cols.length; jj++) {\n      row.push(FieldPossibleValues.UNDEFINED);\n    }\n    Field.push(row);\n  }\n\n  return Field;\n};\n\nexport const tryResolveRow = (row: Array<number>, definition: Array<number>): Array<number> => {\n  const stateMachine = createStateMachine(row, definition);\n  const transitions = createStateMachineTransitions(stateMachine);\n  const stateMatrix = createStateMatrix(transitions, row);\n  fillStateMatrix(row, transitions, stateMatrix);\n  const result = resolveRow(stateMatrix, transitions, row);\n  return result;\n};\n\nconst createStateMachine = (row: Array<number>, definition: Array<number>): Array<number> => {\n  const StateMachine: Array<number> = [];\n\n  for (let ii = 0; ii < definition.length; ii++) {\n    const value = definition[ii];\n\n    StateMachine.push(StateMachineTransitions.IDLE);\n\n    for (let jj = 0; jj < value; jj++) {\n      StateMachine.push(StateMachineTransitions.TRANSITION);\n    }\n  }\n\n  StateMachine.push(StateMachineTransitions.IDLE);\n\n  return StateMachine;\n};\n\nconst createStateMachineTransitions = (stateMachine: Array<number>): Array<Transition> => {\n  const StateMachineTransitioner: Transition[] = [];\n\n  for(let ii = 0; ii < stateMachine.length - 2; ii++) {\n    const current = stateMachine[ii];\n    const next = stateMachine[ii + 1];\n\n    if (current === 0 && next === 1) {\n      StateMachineTransitioner.push(new Transition(ii, ii + 1, ii));\n    } else if (current === 1 && next === 1) {\n      StateMachineTransitioner.push(new Transition(ii, ii + 1, undefined));\n    } else if (current === 1 && next === 0) {\n      StateMachineTransitioner.push(new Transition(ii, undefined, ii + 1));\n    }\n  }\n\n  StateMachineTransitioner.push(new Transition(stateMachine.length - 2, undefined, stateMachine.length - 2));\n\n  return StateMachineTransitioner;\n};\n\nconst createStateMatrix = (transitions: Array<Transition>, rowDefinition: Array<number>): StateMatrixType => {\n  const StateMatrix: StateMatrixType = [];\n  // Fill State matrix undefined elements\n  for (let ii = 0; ii < transitions.length; ii++) {\n    const row = [];\n    for (let jj = 0; jj < rowDefinition.length; jj++) {\n      row.push([]);\n    }\n    StateMatrix.push(row);\n  }\n\n  return StateMatrix;\n};\n\nconst fillStateMatrix = (row: Array<number>, transitions: Array<Transition>, stateMatrix: StateMatrixType) => {\n  const couldBeInPosition = new Set<number>();\n  couldBeInPosition.add(0);\n\n  for (let column = 0; column < row.length; column++) {\n    const currentFieldValue = row[column];\n    const nextStateAvailablePositions: number[] = [];\n\n    couldBeInPosition.forEach((statePositionIndex) => {\n      const stateMachineValueForPosition = transitions[statePositionIndex as number];\n\n      switch (currentFieldValue) {\n        case FieldPossibleValues.UNDEFINED: {\n          if (stateMachineValueForPosition.nextByO !== undefined) {\n            if (stateMachineValueForPosition.currentPosition === stateMachineValueForPosition.nextByO) {\n              stateMatrix[stateMachineValueForPosition.nextByO][column].push(StateMatrixTransitions.LEFT_O);\n            } else {\n              stateMatrix[stateMachineValueForPosition.nextByO][column].push(StateMatrixTransitions.LEFT_TOP_O);\n            }\n            nextStateAvailablePositions.push(stateMachineValueForPosition.nextByO);\n          }\n\n          if (stateMachineValueForPosition.nextByX !== undefined) {\n            if (stateMachineValueForPosition.currentPosition === stateMachineValueForPosition.nextByX) {\n              stateMatrix[stateMachineValueForPosition.nextByX][column].push(StateMatrixTransitions.LEFT_X);\n            } else {\n              stateMatrix[stateMachineValueForPosition.nextByX][column].push(StateMatrixTransitions.LEFT_TOP_X);\n            }\n            nextStateAvailablePositions.push(stateMachineValueForPosition.nextByX);\n          }\n          break;\n        }\n        case FieldPossibleValues.BLACK_SQUARE: {\n          if (stateMachineValueForPosition.nextByX !== undefined) {\n            if (stateMachineValueForPosition.currentPosition === stateMachineValueForPosition.nextByX) {\n              stateMatrix[stateMachineValueForPosition.nextByX][column].push(StateMatrixTransitions.LEFT_X);\n            } else {\n              stateMatrix[stateMachineValueForPosition.nextByX][column].push(StateMatrixTransitions.LEFT_TOP_X);\n            }\n            nextStateAvailablePositions.push(stateMachineValueForPosition.nextByX);\n          }\n          break;\n        }\n        case FieldPossibleValues.WHITE_SQUARE: {\n          if (stateMachineValueForPosition.nextByO !== undefined) {\n            if (stateMachineValueForPosition.currentPosition === stateMachineValueForPosition.nextByO) {\n              stateMatrix[stateMachineValueForPosition.nextByO][column].push(StateMatrixTransitions.LEFT_O);\n            } else {\n              stateMatrix[stateMachineValueForPosition.nextByO][column].push(StateMatrixTransitions.LEFT_TOP_O);\n            }\n            nextStateAvailablePositions.push(stateMachineValueForPosition.nextByO);\n          }\n          break;\n        }\n      }\n    });\n\n    couldBeInPosition.clear();\n\n    nextStateAvailablePositions.forEach(v => couldBeInPosition.add(v));\n  }\n};\n\ntype Queue = {\n  value: number[];\n  currentVariant: number[];\n  rowNumber: number;\n  colNumber: number;\n};\n\nconst resolveRow = (stateMatrix: StateMatrixType, transitions: Array<Transition>, row: Array<number>): Array<number> => {\n  // Check if exist\n  const rightBottomCorner = stateMatrix[transitions.length - 1][row.length - 1];\n\n  // If array is empty then we can't reach end our state machine\n  if (rightBottomCorner.length === 0) {\n    throw new Error('No variants. Something went wrong');\n  }\n\n  // Try to create all available variants\n  const availableVariants: Array<Array<number>> = [];\n  let rowPosition = transitions.length - 1;\n  let colPosition = row.length - 1;\n\n  // function calculateVariant(rowNumber: number, colNumber: number, matrix: StateMachineMatrix, currentVariant: Array<number> = [], cell: Array<number> = [], useCell = false) {\n  //   while (rowNumber !== -1 && colNumber !== -1) {\n  //     const cellArray = useCell ? cell : matrix[rowNumber][colNumber];\n  //     useCell = false;\n  //     if (cellArray.length === 2) {\n  //       calculateVariant(rowNumber, colNumber, matrix, currentVariant.slice(), [cellArray[0]], true);\n  //       calculateVariant(rowNumber, colNumber, matrix, currentVariant.slice(), [cellArray[1]], true);\n  //       return;\n  //     } else {\n  //       const value = cellArray[0];\n  //\n  //       switch (value) {\n  //         case StateMatrixTransitions.LEFT_O: {\n  //           currentVariant.push(FieldPossibleValues.WHITE_SQUARE);\n  //           colNumber = colNumber - 1;\n  //           break;\n  //         }\n  //         case StateMatrixTransitions.LEFT_X: {\n  //           currentVariant.push(FieldPossibleValues.BLACK_SQUARE);\n  //           colNumber = colNumber - 1;\n  //           break;\n  //         }\n  //         case StateMatrixTransitions.LEFT_TOP_O: {\n  //           currentVariant.push(FieldPossibleValues.WHITE_SQUARE);\n  //           rowNumber = rowNumber - 1;\n  //           colNumber = colNumber - 1;\n  //           break;\n  //         }\n  //         case StateMatrixTransitions.LEFT_TOP_X: {\n  //           currentVariant.push(FieldPossibleValues.BLACK_SQUARE);\n  //           rowNumber = rowNumber - 1;\n  //           colNumber = colNumber - 1;\n  //           break;\n  //         }\n  //         default: {\n  //           colNumber = colNumber - 1;\n  //           rowNumber = rowNumber - 1;\n  //         }\n  //       }\n  //     }\n  //   }\n  //\n  //   availableVariants.push(currentVariant.reverse());\n  // }\n  //\n  // calculateVariant(rowPosition, colPosition, stateMatrix);\n\n  const q: Queue[] = [{\n    value: stateMatrix[rowPosition][colPosition],\n    currentVariant: [],\n    rowNumber: rowPosition,\n    colNumber: colPosition,\n  }];\n\n  while (q.length) {\n    let { value, currentVariant, colNumber, rowNumber } = q.pop() as Queue;\n    let exit = false;\n\n    while (rowNumber !== -1 && colNumber !== -1) {\n      let cellArray = value.length ? value : stateMatrix[rowNumber][colNumber];\n      value = [];\n      if (cellArray.length === 2) {\n        q.push({\n          value: [cellArray[0]],\n          currentVariant: currentVariant.slice(),\n          rowNumber,\n          colNumber,\n        });\n        q.push({\n          value: [cellArray[1]],\n          currentVariant: currentVariant.slice(),\n          rowNumber,\n          colNumber,\n        });\n        exit = true;\n        break;\n      } else {\n        const value = cellArray[0];\n\n        switch (value) {\n          case StateMatrixTransitions.LEFT_O: {\n            currentVariant.push(FieldPossibleValues.WHITE_SQUARE);\n            colNumber = colNumber - 1;\n            break;\n          }\n          case StateMatrixTransitions.LEFT_X: {\n            currentVariant.push(FieldPossibleValues.BLACK_SQUARE);\n            colNumber = colNumber - 1;\n            break;\n          }\n          case StateMatrixTransitions.LEFT_TOP_O: {\n            currentVariant.push(FieldPossibleValues.WHITE_SQUARE);\n            rowNumber = rowNumber - 1;\n            colNumber = colNumber - 1;\n            break;\n          }\n          case StateMatrixTransitions.LEFT_TOP_X: {\n            currentVariant.push(FieldPossibleValues.BLACK_SQUARE);\n            rowNumber = rowNumber - 1;\n            colNumber = colNumber - 1;\n            break;\n          }\n          default: {\n            colNumber = colNumber - 1;\n            rowNumber = rowNumber - 1;\n          }\n        }\n      }\n    }\n\n    if (!exit) {\n      availableVariants.push(currentVariant.reverse());\n    }\n  }\n\n  const response: Array<number> = [];\n\n  // Go through variants and check if each column has the same value\n  for (let col = 0; col < availableVariants[0].length; col++) {\n    const value = availableVariants[0][col];\n    let theSameValue = true;\n\n    for (let row = 1; row < availableVariants.length; row++) {\n      const currentValue = availableVariants[row][col];\n\n      if (value !== currentValue) {\n        theSameValue = false;\n        break;\n      }\n    }\n\n    if (theSameValue) {\n      response[col] = value;\n    } else {\n      response[col] = FieldPossibleValues.UNDEFINED;\n    }\n  }\n\n  return response;\n};\n","import React, { ChangeEvent, useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styles from './grid.module.scss';\nimport { RootState } from '../../store';\nimport { FieldType } from '../../models';\nimport {\n  applyColumnResult,\n  createField,\n  createRowFromColumn, every,\n  isArraysEqual,\n  sum,\n  tryResolveRow\n} from '../../utils';\nimport { AppActions } from '../../store/app/actions';\nimport { Button } from '../button';\n\nfunction timeout(ms: number) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nconst CELL_SIZE = 25;\n\nfunction parseArray(text: string) {\n  return text\n    .replace(/[^\\d\\n]+/g, ' ')\n    .trim()\n    .split('\\n')\n    .map(row => (row.match(/\\d+/g) || [])\n      .map(parseFloat)\n      .filter(Math.sign));\n}\n\nfunction parseText(text: string) {\n  return text.replace(/(\\]|\\})[^\\d\\]\\}]+/g, '\\n').replace(/[^\\d\\n]+/g, '  ').replace(/[ \\t]*\\n[ \\t]*/g, '\\n').trim();\n}\n\nexport const Grid = () => {\n  const dispatch = useDispatch();\n  const { columns, rows, running, speed, clear, selectedOption } = useSelector((state: RootState) => state.app);\n  const [field, setField] = useState<FieldType>([]);\n  const [isHorizontal, setHorizontal] = useState(true);\n  const [scannerPosition, setScannerPosition] = useState(0);\n  const [maxColumnHeight, setMaxColumnHeight] = useState<Array<number>>([]);\n  const [maxRowsHeight, setMaxRowsHeight] = useState<Array<number>>([]);\n  const [rowsInput, setRowsInput] = useState('');\n  const [columnsInput, setColumnsInput] = useState('');\n\n  useEffect(() => {\n    if (!columns || !rows) {\n      return;\n    }\n\n    const f = createField(rows, columns);\n\n    setField(f);\n\n    const maxCol = columns.slice().sort((a, b) => b.length - a.length)[0].length;\n    setMaxColumnHeight(new Array(maxCol).fill(0));\n\n    const maxRow = rows.slice().sort((a, b) => b.length - a.length)[0].length;\n    setMaxRowsHeight(new Array(maxRow).fill(0));\n\n    if (clear) {\n      dispatch(AppActions.clearField(!clear));\n    }\n  }, [columns, rows, clear]);\n\n  useEffect(() => {\n    if (!rows || !columns) {\n      return;\n    }\n\n    const solve = async () => {\n      if (running) {\n\n        try {\n          let hasChanges;\n\n          do {\n            hasChanges = false;\n\n            // Go through rows\n            setHorizontal(true);\n            for (let rowNumber = 0; rowNumber < rows.length; rowNumber++) {\n              const row = field[rowNumber];\n\n              if (!row.includes(0)) {\n                continue;\n              }\n\n              setScannerPosition(rowNumber);\n\n              const rowDefinition = rows[rowNumber];\n\n              if (every(row, 0) && sum(rowDefinition) < row.length / 2) {\n                continue;\n              }\n\n              const result = tryResolveRow(row, rowDefinition);\n              if (!isArraysEqual(row, result)) {\n                hasChanges = true;\n              }\n              field.splice(rowNumber, 1, result);\n\n              await timeout(speed.value);\n              setField(field.slice());\n            }\n\n            // Go through columns\n            setHorizontal(false);\n            for (let colNumber = 0; colNumber < columns.length; colNumber++) {\n              const row = createRowFromColumn(field, colNumber);\n\n              if (!row.includes(0)) {\n                continue;\n              }\n\n              setScannerPosition(colNumber);\n\n              const colDefinition = columns[colNumber];\n\n              if (every(row, 0) && sum(colDefinition) < row.length / 2) {\n                continue;\n              }\n\n              const result = tryResolveRow(row, colDefinition);\n              if (!isArraysEqual(row, result)) {\n                hasChanges = true;\n              }\n              applyColumnResult(field, colNumber, result);\n              await timeout(speed.value);\n              setField(field.slice());\n            }\n          } while (hasChanges);\n\n\n          dispatch(AppActions.setRunning(false));\n        } catch (e) {\n          alert('Not correct data provided. Please, check your inputs carefully!');\n          dispatch(AppActions.setRunning(false));\n        }\n      }\n    };\n\n    solve();\n  }, [columns, rows, running]);\n\n  const scannerStyle = columns && rows ? ({\n    ...(isHorizontal ? {\n      height: CELL_SIZE,\n      width: columns.length * CELL_SIZE,\n      top: scannerPosition * CELL_SIZE,\n    } : {\n      width: CELL_SIZE,\n      height: rows.length * CELL_SIZE,\n      left: scannerPosition * CELL_SIZE,\n    }),\n  }) : {};\n\n  const TableHeader = useCallback(() => {\n    if (!columns) {\n      return null;\n    }\n\n    if (!columns.length || !maxColumnHeight.length) {\n      return null;\n    }\n\n    const reversed = columns.slice().map(col => {\n      const newArr = col.slice().reverse().concat(new Array(Math.abs(maxColumnHeight.length - col.length)).fill(undefined));\n      return newArr.reverse();\n    });\n\n    return (\n      <table className={styles.numberTable}>\n        <tbody>\n        {maxColumnHeight.map((headerRow, headerIndex) => {\n          return (\n            <tr key={headerIndex}>\n              {reversed.map((column, colIndex) => {\n                return (\n                  <td key={colIndex} className={styles.numberCell}>\n                    {column[headerIndex] !== undefined ? column[headerIndex] : ''}\n                  </td>\n                )\n              })}\n            </tr>\n          );\n        })}\n        </tbody>\n      </table>\n    )\n  }, [maxColumnHeight, columns]);\n\n  const RowHeader = useCallback(() => {\n    if (!rows) {\n      return null;\n    }\n\n    if (!rows.length || !maxRowsHeight.length) {\n      return null;\n    }\n\n    const reversed = rows.slice().map(row => {\n      const newArr = row.slice().reverse().concat(new Array(Math.abs(maxRowsHeight.length - row.length)).fill(undefined));\n      return newArr.reverse();\n    });\n\n    return (\n      <table className={styles.numberTable}>\n        <tbody>\n        {reversed.map((row, rowIndex) => {\n          return (\n            <tr key={rowIndex}>\n              {maxRowsHeight.map((rowHeight, rowHeightIndex) => {\n                return (\n                  <td key={rowHeightIndex} className={styles.numberCell}>\n                    {row[rowHeightIndex] !== undefined ? row[rowHeightIndex] : ''}\n                  </td>\n                )\n              })}\n            </tr>\n          )\n        })}\n        </tbody>\n      </table>\n    )\n  }, [maxRowsHeight, rows]);\n\n  const updateInput = useCallback((setter) => {\n    return (e: ChangeEvent<HTMLTextAreaElement>) => {\n      setter(e.target.value);\n    }\n  }, []);\n\n  const handleParse = useCallback(() => {\n    const r = parseText(rowsInput);\n    const c = parseText(columnsInput);\n\n    const rows = parseArray(r);\n    const columns = parseArray(c);\n\n    setRowsInput(parseText(rowsInput));\n    setColumnsInput(parseText(columnsInput));\n\n    if (r.length && c.length) {\n      dispatch(AppActions.setCustomFields(rows, columns));\n    }\n  }, [rowsInput, columnsInput]);\n\n  return (\n    <>\n      {selectedOption.value === -1 && (\n        <>\n          <div className={styles.description}>Put your rows in the left and columns in the right textarea. One row (column) a line, numbers separated by any non-numerical characters.</div>\n          <div className={styles.inputs}>\n          <textarea value={rowsInput} onChange={updateInput(setRowsInput)} placeholder={'Rows...'}\n                    className={styles.input}/>\n            <textarea value={columnsInput} onChange={updateInput(setColumnsInput)} placeholder={'Columns...'}\n                      className={styles.input}/>\n            <div className={styles.actions}>\n              <Button title={'Parse'} onClick={handleParse}/>\n            </div>\n          </div>\n        </>\n      )}\n      {rows && columns &&\n      <table>\n        <tbody>\n        <tr>\n          <td></td>\n          <td>\n            <TableHeader/>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <RowHeader/>\n          </td>\n          <td>\n            <table className={styles.table}>\n              <tbody>\n              {field.map((row, rowIndex) => {\n                return (\n                  <tr key={rowIndex} className={styles.row}>\n                    {row.map((col, colIndex) => {\n                      const classes = [styles.cell];\n\n                      if (col === -1) {\n                        classes.push(styles.empty);\n                      }\n\n                      if (col === 1) {\n                        classes.push(styles.filled);\n                      }\n                      return (\n                        <td key={colIndex} className={classes.join(' ')}>\n                          {col === -1 && <div className={styles.dotWrapper}>\n                            <div className={styles.dot}/>\n                          </div>}\n                        </td>\n                      );\n                    })}\n                  </tr>\n                );\n              })}\n              {running &&\n              <tr className={styles.scanner} style={scannerStyle}/>\n              }\n              </tbody>\n            </table>\n          </td>\n        </tr>\n        </tbody>\n      </table>\n      }\n    </>\n  );\n};\n","import React from 'react';\nimport { Provider } from 'react-redux'\nimport store from './store';\nimport './App.scss';\nimport { Header } from './components/header';\nimport { Grid } from './components/grid';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"app\">\n        <Header/>\n        <main className=\"content\">\n          <Grid/>\n        </main>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"header_navigation__1QWqX\",\"name\":\"header_name__1Lii-\",\"btn\":\"header_btn__4yx9n\",\"selector\":\"header_selector__16_P1\",\"github\":\"header_github__33Ahd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"select_wrapper__3G2oJ\",\"arrow\":\"select_arrow__2-wLv\",\"disabled\":\"select_disabled__2fVFb\",\"list\":\"select_list__3aZ4F\",\"item\":\"select_item__osqJf\",\"select\":\"select_select__XlnEk\"};"],"sourceRoot":""}