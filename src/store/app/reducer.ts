import { Action } from '../../models/Action';
import { APP_CONSTANTS } from './constants';
import { Option } from '../../models/Option';

export type AppState = {
  rows: Array<Array<number>>;
  columns: Array<Array<number>>;
  running: boolean;
  selectedOption: Option;
};

const QR = {
  rows: [
    [7, 2, 2, 7],
    [1, 1, 1, 2, 1, 1],
    [1, 3, 1, 3, 1, 1, 3, 1],
    [1, 3, 1, 2, 1, 1, 3, 1],
    [1, 3, 1, 2, 1, 3, 1],
    [1, 1, 2, 2, 1, 1],
    [7, 1, 1, 1, 7],
    [2],
    [2, 3, 2, 1, 4],
    [1, 1, 3, 3, 2, 1],
    [3, 1, 3, 2, 2],
    [1, 1, 1, 3, 1, 1],
    [1, 5, 1, 1, 1, 1],
    [1, 1, 1, 1, 3, 1],
    [7, 1, 1],
    [1, 1, 1, 1, 1, 1, 1, 1],
    [1, 3, 1, 1, 1, 2, 2],
    [1, 3, 1, 2, 1, 2, 1, 1],
    [1, 3, 1, 1, 1, 2],
    [1, 1, 2, 1, 1],
    [7, 1, 3, 1],
  ],
  columns: [
    [7, 1, 2, 7],
    [1, 1, 1, 1, 1, 1],
    [1, 3, 1, 1, 1, 3, 1],
    [1, 3, 1, 1, 1, 1, 3, 1],
    [1, 3, 1, 1, 1, 1, 3, 1],
    [1, 1, 2, 1, 1],
    [7, 1, 1, 1, 7],
    [4],
    [4, 2, 2, 2, 2, 2],
    [1, 2, 1, 1, 1, 2, 3],
    [1, 2, 2, 2],
    [2, 3, 1, 1, 1, 1, 1],
    [3, 3, 2, 3, 1, 1],
    [1, 1, 3, 2],
    [7, 1, 1],
    [1, 1, 1, 1, 1, 1, 1],
    [1, 3, 1, 3, 2, 3],
    [1, 3, 1, 2, 2, 1, 1],
    [1, 3, 1, 1, 1, 1, 1],
    [1, 1, 5, 3],
    [7, 1, 1, 2, 1],
  ]
};

const Bunny = {
  rows: [
    [5, 5],
    [3, 1, 2],
    [1, 5, 2],
    [1, 4, 5, 1],
    [8, 4, 1],
    [3, 4, 1],
    [2, 3, 1],
    [2, 3, 1],
    [3, 2, 1],
    [1, 2],
    [7, 1],
    [1, 1, 1, 2],
    [1, 1, 1, 1, 1, 1],
    [1, 2, 1, 1, 1],
    [2, 8, 1],
    [4, 4, 1, 4],
    [1, 1, 1, 1, 1],
    [3, 3, 1, 3],
    [1, 2, 1, 1, 1, 2],
    [1, 3, 1, 6, 1],
  ],
  columns: [
    [2],
    [2, 1, 1, 1],
    [1, 1, 1, 1, 1],
    [1, 2, 3, 1],
    [1, 2, 2, 2],
    [1, 2, 2, 2],
    [1, 3, 3, 1, 1],
    [1, 2, 1, 2, 2],
    [1, 6, 1, 2, 1],
    [2, 3, 1, 6],
    [1, 2, 1, 6, 1],
    [1, 4, 1, 1, 2],
    [1, 7, 1, 1, 1, 1, 1],
    [1, 7, 1, 1, 1],
    [2, 5, 2, 2, 1, 1],
    [2, 1, 1, 1],
    [10, 1, 2],
    [3, 1, 2],
    [4, 1],
    [1, 1],
  ],
};

const Aries = {
  rows: [
    [8],
    [3, 3, 3, 3],
    [10, 2, 10],
    [3, 2, 2, 2, 4, 2],
    [2, 2, 1, 2, 2, 2],

    [2, 6, 1, 1, 2],
    [1, 2, 2, 2, 2],
    [1, 2, 2, 2, 4, 2],
    [1, 2, 1, 1, 7, 2, 2],
    [1, 3, 1, 12],

    [2, 2, 12],
    [2, 2, 7, 3],
    [4, 7, 1, 1],
    [7, 2],
    [2, 8, 6],

    [4, 9, 9],
    [6, 24],
    [3, 4, 24],
    [3, 28],
    [3, 1, 24],

    [3, 19, 3],
    [6, 4, 5, 7, 2],
    [11, 6, 7],
    [4, 10, 2, 4],
    [4, 5, 8],

    [3, 3, 4],
    [2, 3, 3],
    [4, 3, 3],
    [3, 4, 4, 2, 1],
    [1, 3, 3, 3, 2, 1],

    [1, 5, 2, 3, 2],
    [2, 21, 2],
    [2, 3, 1],
    [1, 2, 1, 3, 2, 4, 4, 2],
    [2, 2, 1, 2, 1, 2, 2, 2, 2],

    [2, 4, 2, 1, 2, 3, 4, 1],
    [1, 2, 1, 3, 2, 2, 2, 3],
    [4, 1, 2, 2, 4, 4, 1, 1, 1],
    [4, 3, 1, 1],
    [23, 2, 1],
  ],
  columns: [
    [2, 4, 3],
    [3, 1, 2, 2, 1],
    [6, 4, 3, 2, 3, 1],
    [2, 2, 3, 4, 1, 2],
    [2, 2, 2, 3, 4, 2, 4, 1],

    [2, 4, 1, 4, 4, 1, 5, 2],
    [2, 2, 1, 1, 5, 3, 1, 1, 1, 2],
    [2, 1, 2, 2, 3, 3, 1, 5, 1],
    [2, 1, 1, 2, 2, 3, 2, 1],
    [3, 1, 4, 4, 1, 5, 1, 5, 1],

    [1, 1, 1, 9, 4, 1, 4, 1],
    [1, 1, 1, 12, 3, 1, 1, 2, 1],
    [1, 1, 1, 17, 1, 2, 1, 1],
    [1, 1, 19, 1, 1],
    [1, 2, 17, 1, 5, 1],

    [2, 2, 14, 1, 1, 5, 1],
    [2, 1, 5, 7, 2, 1, 1],
    [2, 1, 4, 9, 1, 5, 1],
    [2, 5, 1, 8, 2, 1, 5, 1],
    [5, 3, 1, 7, 3, 1, 1, 1, 1, 1],

    [7, 7, 3, 1, 1, 1, 1],
    [4, 9, 3, 1, 1],
    [2, 5, 5, 1, 3, 1, 1],
    [8, 3, 3, 3, 1, 1],
    [8, 2, 4, 1, 3, 1],

    [2, 11, 2, 1, 1, 3, 1],
    [4, 12, 2, 1, 2],
    [2, 1, 15, 1, 2],
    [3, 14, 2, 1],
    [7, 9, 2, 1, 1],

    [7, 6, 2, 3],
    [3, 7, 2, 1],
    [2, 1, 6, 2, 3, 4],
    [4, 4, 1, 2, 2, 1],
    [2, 4, 2, 1],
  ],
};

const Flower = {
  rows: [
    [3],
    [1, 1],
    [1, 1],
    [1, 2],
    [1, 1, 1, 2],

    [1, 1, 2, 2],
    [1, 6, 2, 1, 2],
    [1, 2, 2, 1, 5],
    [1, 2, 1, 1, 2],
    [1, 6, 1, 3],

    [2, 2, 2, 2, 2],
    [2, 3, 8],
    [2, 2, 2, 2],
    [2, 1, 1, 1],
    [2, 1, 2, 2],

    [2, 2, 2, 4, 1],
    [2, 2, 1, 3, 5],
    [2, 3, 4, 2, 1],
    [2, 14, 2],
    [2, 7, 4],

    [2, 3, 3],
    [2, 3, 2],
    [2, 3],
    [1, 22],
    [24],
  ],
  columns: [
    [20],
    [13, 1],
    [2],
    [2, 3],
    [3, 4],

    [1, 1, 5],
    [1, 1, 3, 2],
    [1, 2, 6, 2],
    [1, 11, 2],
    [1, 2, 3, 2],

    [2, 2, 2, 2, 2],
    [1, 9, 3, 2],
    [1, 5, 2],
    [3, 2, 2, 2],
    [4, 3, 2, 2],

    [8, 1, 1, 2],
    [3, 1, 1, 2],
    [2, 1, 1, 1, 2],
    [2, 2, 2, 1, 1, 2],
    [4, 2, 1, 1, 2],

    [1, 1, 2, 2, 2],
    [2, 1, 3, 1, 2],
    [2, 2, 5, 2],
    [3, 1, 4, 2],
    [4, 2, 1],
  ],
};

const Dog = {
  rows: [[4], [8, 2], [10, 5], [8, 5], [7, 2, 1, 5], [4, 4, 8], [4, 2, 2, 1, 6], [8, 8], [6, 1, 4], [4, 4], [3, 4, 3], [4, 3, 1], [4, 1, 1, 2], [1, 1, 1, 6, 1], [1, 1]],
  columns: [[4, 1], [7, 1], [9, 3], [13], [13], [4, 5], [4, 4, 1], [3, 4, 1, 1], [1, 2, 1, 1], [2, 4, 1, 1], [1, 2, 2, 1], [4], [3, 2, 1], [1, 2, 2, 2], [2, 3, 2, 1, 1], [10, 1], [9], [8], [6], [4]]
};

const Queen = {
  columns: [[33, 1, 6, 2], [1, 1, 1, 1, 2, 3, 2], [1, 4, 2, 3, 1, 1, 2, 1], [1, 6, 3, 1, 6, 1, 3], [1, 7, 3, 2, 3, 7], [1, 7, 1, 6, 2, 1, 2], [1, 8, 2, 7, 2, 3, 1], [1, 8, 3, 6, 3, 2, 2, 1], [1, 10, 3, 3, 4, 9, 2], [16, 4, 2, 1, 2, 4], [1, 10, 3, 3, 2, 2, 4, 2, 3], [1, 8, 3, 1, 4, 4, 2, 3, 2], [1, 8, 2, 3, 2, 3, 2, 2, 1], [1, 7, 1, 1, 2, 1, 2, 3, 5], [1, 7, 5, 4, 6, 1, 4], [1, 6, 1, 3, 1, 8, 2, 1, 2], [1, 4, 3, 2, 10, 1, 1, 1], [1, 19, 1], [1, 2, 1, 11, 2, 1], [1, 3, 1, 2, 10, 1], [1, 3, 1, 2, 1, 10, 1], [1, 6, 6, 2, 2, 14], [3, 2, 2, 1, 2, 5, 1, 10], [2, 1, 3, 1, 1, 1, 1, 2, 3, 10], [3, 1, 1, 1, 2, 1, 3, 13], [4, 1, 2, 1, 3, 1, 3, 12], [4, 1, 1, 4, 1, 2, 1, 14], [5, 1, 20], [7, 3, 1, 1, 15], [1, 12, 2, 1, 14], [2, 12, 2, 1, 13], [6, 10, 1, 1, 13], [2, 4, 7, 1, 11], [1, 2, 4, 5, 1, 10, 3], [2, 2, 5, 5, 9, 2], [3, 6, 4, 5, 8, 4], [1, 2, 2, 3, 2, 10], [4, 2, 5, 2, 7, 5], [3, 7, 3, 3, 2, 3, 1], [3, 2, 5, 3, 2, 3, 4, 2], [2, 2, 4, 2, 2, 3, 4], [2, 3, 3, 3, 2, 6], [1, 3, 2, 3, 9]],
  rows: [[22, 5, 3, 4, 3], [1, 1, 7, 3, 2, 4], [1, 3, 1, 5, 3, 5], [1, 3, 2, 4, 1, 2, 2, 3], [1, 5, 1, 3, 1, 2, 5], [1, 7, 1, 4, 2, 2, 2, 2], [1, 11, 2, 2, 1, 4], [1, 13, 5, 3, 1, 1, 2], [1, 15, 2, 1, 2, 2, 2, 1, 1], [1, 15, 1, 2, 2, 1, 2, 2], [1, 15, 2, 4, 1, 1, 2], [1, 15, 1, 4, 2, 2, 1], [1, 4, 1, 4, 3, 4, 1, 1, 2], [1, 3, 3, 3, 1, 1, 2], [1, 5, 2, 3, 1, 1, 1], [1, 7, 1, 4, 2, 2, 2], [1, 3, 3, 1, 3, 1, 1, 1], [1, 4, 3, 1, 2, 2], [1, 1, 3, 3, 4, 2, 1, 1], [1, 1, 3, 3, 2, 1, 3, 2, 2, 1], [1, 2, 1, 3, 1, 2, 1, 2, 2, 2], [1, 1, 2, 5, 2, 2, 5, 1, 1], [1, 2, 1, 2, 4, 4, 2, 2, 2, 2], [1, 2, 1, 2, 1, 2, 2, 5, 2, 2, 1], [4, 2, 6, 2, 5, 2, 2], [1, 3, 2, 2, 6, 15, 1], [1, 4, 2, 1, 1, 2, 1, 2, 2, 2], [1, 5, 2, 2, 1, 3, 1, 3, 1], [1, 6, 2, 4, 3, 3, 2, 1], [1, 4, 6, 7, 3, 1, 4], [3, 2, 2, 9, 1, 13], [1, 2, 2, 1, 26], [2, 1, 2, 2, 25, 1], [3, 2, 1, 25, 2], [2, 2, 3, 24, 1], [5, 1, 2, 22, 2], [1, 1, 2, 2, 2, 21, 1, 2], [3, 1, 3, 2, 19, 1, 1, 1], [5, 3, 2, 3, 1, 14, 1, 1, 1], [2, 2, 2, 1, 1, 4, 13, 3, 2], [1, 1, 1, 4, 2, 10, 3, 2], [1, 2, 2, 5, 1, 8, 1, 1, 1, 3], [4, 2, 1, 2, 7, 1, 1, 3], [2, 3, 4, 3, 4, 3, 4], [1, 9, 1, 2, 2, 5]]
};

export const NonogramOptions: Option[] = [
  {
    label: 'QR code',
    value: 1,
  },
  {
    label: 'Bunny',
    value: 2,
  },
  {
    label: 'Aries',
    value: 3,
  },
  {
    label: 'Flower',
    value: 4,
  },
  {
    label: 'Dog',
    value: 5,
  },
  {
    label: 'Queen of Spades',
    value: 6,
  }
];

const imagesMapper: { [key: number]: { rows: Array<Array<number>>, columns: Array<Array<number>> } } = {
  1: QR,
  2: Bunny,
  3: Aries,
  4: Flower,
  5: Dog,
  6: Queen,
};

const initialState: AppState = {
  ...imagesMapper[NonogramOptions[0].value],
  selectedOption: NonogramOptions[0],
  running: false,
};

const app = (state: AppState = initialState, action: Action) => {
  switch (action.type) {
    case APP_CONSTANTS.SET_RUNNING: {
      return {
        ...state,
        running: action.payload,
      };
    }
    case APP_CONSTANTS.CHANGE_OPTION: {
      const option: Option = action.payload;
      return {
        ...state,
        ...imagesMapper[option.value],
        selectedOption: option,
        running: false,
      }
    }
    default: {
      return state;
    }
  }
};

export default app;
